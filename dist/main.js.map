{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.menu.ts","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/framework-modules/formdata/gen/allForms.ts","./src/app/framework-modules/formdata/gen/customerListForm.ts","./src/app/framework-modules/formdata/gen/userContextForm.ts","./src/app/framework-modules/formdata/gen/userForm.ts","./src/app/framework-modules/formdata/gen/userRegistrationForm.ts","./src/app/framework-modules/formdata/template/EntryPage/component.ts","./src/app/framework-modules/formdata/template/EntryPage/component.html","./src/app/framework-modules/formdata/template/tableTemplate/component.ts","./src/app/framework-modules/formdata/template/tableTemplate/component.html","./src/app/pages/customerEntry-component.ts","./src/app/pages/customerList-component.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { navMenu } from './app.menu';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: []\n})\nexport class AppComponent {\n  public navMenu;\n  public appName = \"Customer Management ERP\";\n  constructor( private router: Router) {\n    this.navMenu = navMenu \n    // this.router.navigate(['customerList']);\n  }\n\n  public routeTo($event) {\n    this.router.navigate([$event])\n  }\n}\n","\n    <app-mv-toolbar [appName]=\"appName\"></app-mv-toolbar>\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <app-mv-sidenav [navMenu]=\"navMenu\" (emitRoute)=\"routeTo($event)\"></app-mv-sidenav>\n        </div>\n      <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>","export const navMenu = [ \n{\n    \"name\":\"customers\",\"routeTo\":\"customerList\"\n  },]","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRouting } from './app.routes';\nimport { MVComponentsModule } from 'mv-core'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    AppRouting,\n    HttpClientModule,\n    MVComponentsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { customerEntryComponent } from \"/Users/supreethavadhani/workspace/metadev-client-example/src/app/pages/customerEntry-component\";\nimport { customerListComponent } from \"/Users/supreethavadhani/workspace/metadev-client-example/src/app/pages/customerList-component\";import { RouterModule, Routes } from \"@angular/router\";\n\nimport { NgModule } from \"@angular/core\";\n\n\nconst routes: Routes = [\n    { path: 'customerList', component: customerListComponent},\n    { path: 'customerEntry', component: customerEntryComponent},\n];\n\n  @NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class AppRouting { }","import { UserForm } from \"./userForm\";\nimport { UserRegistrationForm } from \"./userRegistrationForm\";\nimport { CustomerListForm } from \"./customerListForm\";\nimport { UserContextForm } from \"./userContextForm\";\n\n export const allForms = { \n    \"user\":UserForm,\n    \"userRegistration\":UserRegistrationForm,\n    \"customerList\":CustomerListForm,\n    \"userContext\":UserContextForm,\n}","\nimport { Form , Field, ChildForm ,FormData, SelectOption, Vo, ServiceAgent } from 'mv-core';\nimport { Validators } from '@angular/forms'\n\nexport class CustomerListForm extends Form {\n\tprivate static _instance = new CustomerListForm();\n\tcustomerId:Field = {\n\t\tname:'customerId'\n\t\t,controlType: 'Hidden'\n\t\t,label: ''\n\t\t,valueType: 1\n\t\t,errorId: 'invalidId'\n\t\t,maxValue: 9999999999999\n\t};\n\tcustomerName:Field = {\n\t\tname:'customerName'\n\t\t,controlType: 'Input'\n\t\t,label: 'Customer Name'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidName'\n\t\t,maxLength: 150\n\t};\n\tcustomerEmail:Field = {\n\t\tname:'customerEmail'\n\t\t,controlType: 'Input'\n\t\t,label: 'Customer Email'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidEmail'\n\t\t,maxLength: 1000\n\t};\n\taddressLine:Field = {\n\t\tname:'addressLine'\n\t\t,controlType: 'Input'\n\t\t,label: 'Address Line 1'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\tuniName:Field = {\n\t\tname:'uniName'\n\t\t,controlType: 'Input'\n\t\t,label: 'University Name'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidName'\n\t\t,maxLength: 150\n\t};\n\n\tpublic static getInstance(): CustomerListForm {\n\t\treturn CustomerListForm._instance;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.fields = new Map();\n\t\tthis.controls = new Map();\n\t\tthis.controls.set('customerId', [Validators.max(9999999999999)]);\n\t\tthis.fields.set('customerId', this.customerId);\n\t\tthis.controls.set('customerName', [Validators.required, Validators.maxLength(150)]);\n\t\tthis.fields.set('customerName', this.customerName);\n\t\tthis.controls.set('customerEmail', [Validators.required, Validators.email, Validators.maxLength(1000)]);\n\t\tthis.fields.set('customerEmail', this.customerEmail);\n\t\tthis.controls.set('addressLine', [Validators.required, Validators.maxLength(1000)]);\n\t\tthis.fields.set('addressLine', this.addressLine);\n\t\tthis.controls.set('uniName', [Validators.required, Validators.maxLength(150)]);\n\t\tthis.fields.set('uniName', this.uniName);\n\t\tthis.opsAllowed = {create: true, filter: true};\n\t\tthis.keyFields = [\"customerId\"];\n\t}\n\n\tpublic getName(): string {\n\t\t return 'customerList';\n\t}\n}\n\n\nexport class CustomerListFd extends FormData {\n\tconstructor(form: CustomerListForm, sa: ServiceAgent) {\n\t\tsuper(form, sa);\n\t}\n\n\tsetFieldValue(name: 'customerId' | 'customerName' | 'customerEmail' | 'addressLine' | 'uniName', value: string | number | boolean | null ): void {\n\t\tsuper.setFieldValue(name, value);\n\t}\n\n\tgetFieldValue(name: 'customerId' | 'customerName' | 'customerEmail' | 'addressLine' | 'uniName' ): string | number | boolean | null {\n\t\treturn super.getFieldValue(name);\n\t}\n}\n\n\nexport interface CustomerListVo extends Vo {\n\tcustomerId?: number, \n\tuniName?: string, \n\taddressLine?: string, \n\tcustomerName?: string, \n\tcustomerEmail?: string\n}\n","\nimport { Form , Field, ChildForm ,FormData, SelectOption, Vo, ServiceAgent } from 'mv-core';\nimport { Validators } from '@angular/forms'\n\nexport class UserContextForm extends Form {\n\tprivate static _instance = new UserContextForm();\n\n\tpublic static getInstance(): UserContextForm {\n\t\treturn UserContextForm._instance;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.fields = new Map();\n\t\tthis.controls = new Map();\n\t\tthis.keyFields = [\"userId\"];\n\t}\n\n\tpublic getName(): string {\n\t\t return 'userContext';\n\t}\n}\n\n\nexport class UserContextFd extends FormData {\n\tconstructor(form: UserContextForm, sa: ServiceAgent) {\n\t\tsuper(form, sa);\n\t}\n\t/**  this form has no editable fields. data nust be accessed as Vo and not through fd **/\n}\n\n\nexport interface UserContextVo extends Vo {\n\ttrustId?: number, \n\tallowedPages?: string, \n\tloginId?: string, \n\tphoneNumber?: string, \n\tdesignationId?: number, \n\tname?: string, \n\tinstituteId?: number, \n\tuserType?: string, \n\tdesignation?: string, \n\tuserId?: number, \n\temail?: string\n}\n","\nimport { Form , Field, ChildForm ,FormData, SelectOption, Vo, ServiceAgent } from 'mv-core';\nimport { Validators } from '@angular/forms'\n\nexport class UserForm extends Form {\n\tprivate static _instance = new UserForm();\n\tuserId:Field = {\n\t\tname:'userId'\n\t\t,controlType: 'Hidden'\n\t\t,label: 'userId'\n\t\t,valueType: 1\n\t\t,errorId: 'invalidFlexibleId'\n\t\t,minValue: -1\n\t\t,maxValue: 9999999999999\n\t};\n\tinstituteId:Field = {\n\t\tname:'instituteId'\n\t\t,controlType: 'Hidden'\n\t\t,label: 'instituteId'\n\t\t,valueType: 1\n\t\t,errorId: 'invalidTenentKey'\n\t\t,maxValue: 9999999999999\n\t};\n\ttrustId:Field = {\n\t\tname:'trustId'\n\t\t,controlType: 'Hidden'\n\t\t,label: 'trustId'\n\t\t,valueType: 1\n\t\t,errorId: 'invalidId'\n\t\t,maxValue: 9999999999999\n\t};\n\tuserType:Field = {\n\t\tname:'userType'\n\t\t,controlType: 'Dropdown'\n\t\t,label: 'User Type'\n\t\t,isRequired: true\n\t\t,listName: 'userType'\n\t\t,valueList: [\n\t\t\t{value:'student',text:'student'},\n\t\t\t{value:'staff',text:'staff'},\n\t\t\t{value:'admin',text:'admin'},\n\t\t\t{value:'guardian',text:'guardian'},\n\t\t\t{value:'trustee',text:'trustee'}\n\t\t\t]\n\t\t,valueType: 0\n\t\t,defaultValue: 'Student'\n\t\t,errorId: 'invalidUserType'\n\t\t,maxLength: 20\n\t};\n\tloginId:Field = {\n\t\tname:'loginId'\n\t\t,controlType: 'Input'\n\t\t,label: 'Login Id'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidLoginId'\n\t\t,maxLength: 50\n\t};\n\tloginToken:Field = {\n\t\tname:'loginToken'\n\t\t,controlType: 'Output'\n\t\t,label: 'Login Token'\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\tloginEnabled:Field = {\n\t\tname:'loginEnabled'\n\t\t,controlType: 'Checkbox'\n\t\t,label: 'Login Enabled'\n\t\t,isRequired: true\n\t\t,valueType: 3\n\t\t,defaultValue: false\n\t\t,errorId: 'invalidBool'\n\t};\n\tresetPasswordCount:Field = {\n\t\tname:'resetPasswordCount'\n\t\t,controlType: 'Output'\n\t\t,label: 'Reset Password Count'\n\t\t,valueType: 1\n\t\t,errorId: 'invalidInteger'\n\t\t,maxValue: 9999999999999\n\t};\n\tloginCount:Field = {\n\t\tname:'loginCount'\n\t\t,controlType: 'Output'\n\t\t,label: 'Login Count'\n\t\t,valueType: 1\n\t\t,errorId: 'invalidInteger'\n\t\t,maxValue: 9999999999999\n\t};\n\tconfirmationToken:Field = {\n\t\tname:'confirmationToken'\n\t\t,controlType: 'Output'\n\t\t,label: 'Confirmation Token'\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\tcurrentLoginIp:Field = {\n\t\tname:'currentLoginIp'\n\t\t,controlType: 'Output'\n\t\t,label: 'Current Login IP'\n\t\t,valueType: 0\n\t\t,errorId: 'invalidIp'\n\t\t,maxLength: 1000\n\t};\n\tpreviousLoginIp:Field = {\n\t\tname:'previousLoginIp'\n\t\t,controlType: 'Output'\n\t\t,label: 'Previous Login IP'\n\t\t,valueType: 0\n\t\t,errorId: 'invalidIp'\n\t\t,maxLength: 1000\n\t};\n\tcurrentLoginAt:Field = {\n\t\tname:'currentLoginAt'\n\t\t,controlType: 'Output'\n\t\t,label: 'CurrentLogin At'\n\t\t,valueType: 5\n\t\t,errorId: 'invalidTimestamp'\n\t};\n\tpreviousLoginAt:Field = {\n\t\tname:'previousLoginAt'\n\t\t,controlType: 'Output'\n\t\t,label: 'Previous Login At'\n\t\t,valueType: 5\n\t\t,errorId: 'invalidTimestamp'\n\t};\n\tresetPasswordSentAt:Field = {\n\t\tname:'resetPasswordSentAt'\n\t\t,controlType: 'Output'\n\t\t,label: 'Reset Password Sent At'\n\t\t,valueType: 5\n\t\t,errorId: 'invalidTimestamp'\n\t};\n\tcreatedAt:Field = {\n\t\tname:'createdAt'\n\t\t,controlType: 'Hidden'\n\t\t,label: 'createdAt'\n\t\t,valueType: 5\n\t\t,errorId: 'invalidTimestamp'\n\t};\n\tupdatedAt:Field = {\n\t\tname:'updatedAt'\n\t\t,controlType: 'Hidden'\n\t\t,label: 'updatedAt'\n\t\t,valueType: 5\n\t\t,errorId: 'invalidTimestamp'\n\t};\n\n\tpublic static getInstance(): UserForm {\n\t\treturn UserForm._instance;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.fields = new Map();\n\t\tthis.controls = new Map();\n\t\tthis.controls.set('userId', [Validators.min(-1), Validators.max(9999999999999)]);\n\t\tthis.fields.set('userId', this.userId);\n\t\tthis.controls.set('instituteId', [Validators.max(9999999999999)]);\n\t\tthis.fields.set('instituteId', this.instituteId);\n\t\tthis.controls.set('trustId', [Validators.max(9999999999999)]);\n\t\tthis.fields.set('trustId', this.trustId);\n\t\tthis.controls.set('userType', [Validators.required, Validators.maxLength(20)]);\n\t\tthis.fields.set('userType', this.userType);\n\t\tthis.controls.set('loginId', [Validators.required, Validators.maxLength(50)]);\n\t\tthis.fields.set('loginId', this.loginId);\n\t\tthis.controls.set('loginToken', [Validators.maxLength(1000)]);\n\t\tthis.fields.set('loginToken', this.loginToken);\n\t\tthis.controls.set('loginEnabled', [Validators.required]);\n\t\tthis.fields.set('loginEnabled', this.loginEnabled);\n\t\tthis.controls.set('resetPasswordCount', [Validators.max(9999999999999)]);\n\t\tthis.fields.set('resetPasswordCount', this.resetPasswordCount);\n\t\tthis.controls.set('loginCount', [Validators.max(9999999999999)]);\n\t\tthis.fields.set('loginCount', this.loginCount);\n\t\tthis.controls.set('confirmationToken', [Validators.maxLength(1000)]);\n\t\tthis.fields.set('confirmationToken', this.confirmationToken);\n\t\tthis.controls.set('currentLoginIp', [Validators.maxLength(1000)]);\n\t\tthis.fields.set('currentLoginIp', this.currentLoginIp);\n\t\tthis.controls.set('previousLoginIp', [Validators.maxLength(1000)]);\n\t\tthis.fields.set('previousLoginIp', this.previousLoginIp);\n\t\tthis.controls.set('currentLoginAt', []);\n\t\tthis.fields.set('currentLoginAt', this.currentLoginAt);\n\t\tthis.controls.set('previousLoginAt', []);\n\t\tthis.fields.set('previousLoginAt', this.previousLoginAt);\n\t\tthis.controls.set('resetPasswordSentAt', []);\n\t\tthis.fields.set('resetPasswordSentAt', this.resetPasswordSentAt);\n\t\tthis.controls.set('createdAt', []);\n\t\tthis.fields.set('createdAt', this.createdAt);\n\t\tthis.controls.set('updatedAt', []);\n\t\tthis.fields.set('updatedAt', this.updatedAt);\n\t\tthis.opsAllowed = {get: true, filter: true};\n\t\tthis.listFields = ['userType'];\n\t\tthis.keyFields = [\"userId\"];\n\t}\n\n\tpublic getName(): string {\n\t\t return 'user';\n\t}\n}\n\n\nexport class UserFd extends FormData {\n\tconstructor(form: UserForm, sa: ServiceAgent) {\n\t\tsuper(form, sa);\n\t}\n\n\tsetFieldValue(name: 'userId' | 'instituteId' | 'trustId' | 'userType' | 'loginId' | 'loginToken' | 'loginEnabled' | 'resetPasswordCount' | 'loginCount' | 'confirmationToken' | 'currentLoginIp' | 'previousLoginIp' | 'currentLoginAt' | 'previousLoginAt' | 'resetPasswordSentAt' | 'createdAt' | 'updatedAt', value: string | number | boolean | null ): void {\n\t\tsuper.setFieldValue(name, value);\n\t}\n\n\tgetFieldValue(name: 'userId' | 'instituteId' | 'trustId' | 'userType' | 'loginId' | 'loginToken' | 'loginEnabled' | 'resetPasswordCount' | 'loginCount' | 'confirmationToken' | 'currentLoginIp' | 'previousLoginIp' | 'currentLoginAt' | 'previousLoginAt' | 'resetPasswordSentAt' | 'createdAt' | 'updatedAt' ): string | number | boolean | null {\n\t\treturn super.getFieldValue(name);\n\t}\n}\n\n\nexport interface UserVo extends Vo {\n\tloginId?: string, \n\tcurrentLoginAt?: string, \n\tresetPasswordSentAt?: string, \n\tloginToken?: string, \n\tresetPasswordCount?: number, \n\tpreviousLoginAt?: string, \n\tisActive?: boolean, \n\tuserId?: number, \n\tloginCount?: number, \n\tpreviousLoginIp?: string, \n\ttrustId?: number, \n\tcreatedAt?: string, \n\tpassword?: string, \n\tcurrentLoginIp?: string, \n\tinstituteId?: number, \n\tconfirmationToken?: string, \n\tloginEnabled?: boolean, \n\tuserType?: string, \n\tupdatedAt?: string\n}\n","\nimport { Form , Field, ChildForm ,FormData, SelectOption, Vo, ServiceAgent } from 'mv-core';\nimport { Validators } from '@angular/forms'\n\nexport class UserRegistrationForm extends Form {\n\tprivate static _instance = new UserRegistrationForm();\n\totp:Field = {\n\t\tname:'otp'\n\t\t,controlType: 'Input'\n\t\t,label: 'Enter the OTP received on your mobile'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\temail:Field = {\n\t\tname:'email'\n\t\t,controlType: 'Input'\n\t\t,label: 'Enter Your E-mail'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidEmail'\n\t\t,maxLength: 1000\n\t};\n\tnewPassword:Field = {\n\t\tname:'newPassword'\n\t\t,controlType: 'Password'\n\t\t,label: 'Password'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\tconfirmPassword:Field = {\n\t\tname:'confirmPassword'\n\t\t,controlType: 'Password'\n\t\t,label: 'Re-enter Password'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\n\tpublic static getInstance(): UserRegistrationForm {\n\t\treturn UserRegistrationForm._instance;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.serveGuests = true;\n\t\tthis.fields = new Map();\n\t\tthis.controls = new Map();\n\t\tthis.controls.set('otp', [Validators.required, Validators.maxLength(1000)]);\n\t\tthis.fields.set('otp', this.otp);\n\t\tthis.controls.set('email', [Validators.required, Validators.email, Validators.maxLength(1000)]);\n\t\tthis.fields.set('email', this.email);\n\t\tthis.controls.set('newPassword', [Validators.required, Validators.maxLength(1000)]);\n\t\tthis.fields.set('newPassword', this.newPassword);\n\t\tthis.controls.set('confirmPassword', [Validators.required, Validators.maxLength(1000)]);\n\t\tthis.fields.set('confirmPassword', this.confirmPassword);\n\t\tthis.opsAllowed = {update: true};\n\t}\n\n\tpublic getName(): string {\n\t\t return 'userRegistration';\n\t}\n}\n\n\nexport class UserRegistrationFd extends FormData {\n\tconstructor(form: UserRegistrationForm, sa: ServiceAgent) {\n\t\tsuper(form, sa);\n\t}\n\n\tsetFieldValue(name: 'otp' | 'email' | 'newPassword' | 'confirmPassword', value: string | number | boolean | null ): void {\n\t\tsuper.setFieldValue(name, value);\n\t}\n\n\tgetFieldValue(name: 'otp' | 'email' | 'newPassword' | 'confirmPassword' ): string | number | boolean | null {\n\t\treturn super.getFieldValue(name);\n\t}\n}\n\n\nexport interface UserRegistrationVo extends Vo {\n\tnewPassword?: string, \n\tconfirmPassword?: string, \n\totp?: string, \n\temail?: string\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  FormData,\n  MVClientCoreAppModule,\n  MVComponentsModule,\n  ServiceAgent,\n  FormService\n} from 'mv-core';\nimport { allForms } from \"/Users/supreethavadhani/workspace/metadev-client-example/src/app/framework-modules/formdata/gen/allForms\"\n\n@Component({\n  standalone: true,\n  selector: 'app-entry-page',\n  templateUrl: './component.html',\n  imports: [MVClientCoreAppModule, MVComponentsModule],\n  exportAs: \"EntryPageComponent\"\n})\n\nexport class EntryPageComponent implements OnInit {\n  @Input() formName: any;\n@Input() routes?: [];\n  public fd: FormData;\n  public formHeader:string;\n  constructor(public sa: ServiceAgent, public router: Router) {}\n  ngOnInit() {\n    this.fd = FormService.getFormFd(this.formName,this.sa,allForms)\n    this.formHeader = this.fd.form.getName().toUpperCase();\n  } \n createSaveRecord() {\n    this.fd.saveAsNew().subscribe(\n      data => {\n        console.log(\"saved\")\n        this.router.navigate([this.routes.filter(routeTo=> routeTo['name'] == \"Save Record\" )[0]['routeTo']])\n    },       err => {\n        console.log(err)\n      });   \n    }   \n navigateNavigateBack() {\n    this.fd = FormService.getFormFd(this.formName,this.sa,allForms)  \n        this.router.navigate([this.routes.filter(routeTo=> routeTo['name'] == \"Navigate Back\" )[0]['routeTo']])  }\n}","    <mat-card class=\"col-md-10\" style=\"margin: auto; margin-top: 2rem;box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\"> \n     <div style=\"margin: 2rem;text-align:center;\">\n        <h2 style=\"color:#004faa\"> {{formHeader}}</h2>\n        <hr>\n    </div>\t<app-mv-form-generator [formData]=\"fd\"></app-mv-form-generator>\n<div style=\"text-align: center;padding-top: 2rem;\"> \n    <app-mv-primary-button name= \"Save Record\" (click)=createSaveRecord()> </app-mv-primary-button> \n    <app-mv-secondary-button name= \"Navigate Back\" (click)=navigateNavigateBack()> </app-mv-secondary-button>\n</div></mat-card>","import {\n  AfterViewInit,\n    Component, Input, OnInit, ViewChild,\n  } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { \n    FilterRequest, FormData, MvTableComponent, ServiceAgent, TableMetaData, MVClientCoreAppModule, MVComponentsModule, FormService \n  } from 'mv-core';\nimport { allForms } from \"/Users/supreethavadhani/workspace/metadev-client-example/src/app/framework-modules/formdata/gen/allForms\";\n  @Component({\n    standalone: true,\n    selector: 'app-table-template',\n    templateUrl: './component.html',\n    imports:[MVClientCoreAppModule,MVComponentsModule],\n    exportAs:\"tableTemplateComponent\",\n    styleUrls: []\n  })\n  \n  export class tableTemplateComponent implements OnInit{\n    @ViewChild(\"gridTable\", { static: false }) gtable: MvTableComponent;\n    @Input() formName: any;\n\n\n  @Input() routes?: [];\n@Input() editRoute: string\npublic fd: FormData\n    public tableData: TableMetaData;\npublic formHeader: string\n\n    constructor(public sa: ServiceAgent, public router: Router) {}\n    \n    async ngOnInit() {\n      this.fd = await FormService.getFormFd(this.formName,this.sa,allForms)\n      this.fetchData();\n     this.formHeader = this.fd.form.getName().toUpperCase();\n    }\n    fetchData() {\n  \n      this.tableData = this.gtable.getColumnData(this.fd)\n      const filter: FilterRequest = {\n        conditions: {}\n      };\n      \n     this.fd.filter(filter).subscribe({\n      next: data =>{\n          this.tableData.data = data;\n          this.gtable.update();\n      },\n      error: msg => console.error(\"Error from server \", msg)\n     });\n    }   \n navigateaddnewrecord() {\n    this.fd = FormService.getFormFd(this.formName,this.sa,allForms)  \n        this.router.navigate([this.routes.filter(routeTo=> routeTo['name'] == \"add new record\" )[0]['routeTo']])  }  \neditClicked($event) {\n    let primaryKey = Object.keys(this.fd.extractKeyFields())[0]\n    let routeKey = {}\n    routeKey[primaryKey] = this.tableData.data[$event][primaryKey]\n    this.router.navigate([this.editRoute,routeKey])\n  }\n}","    <mat-card class=\"col-md-10\" style=\"margin: auto; margin-top: 2rem;box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\"> \n     <div style=\"margin: 2rem;text-align:center;\">\n        <h2 style=\"color:#004faa\"> {{formHeader}}</h2>\n        <hr>\n    </div> <app-mv-table (editAction)=\"editClicked($event)\" style=\"width:1000px;\" data [tableGridData]=\"tableData\" #gridTable></app-mv-table><div style=\"text-align: center;padding-top: 2rem;\"> \n    <app-mv-primary-button name= \"add new record\" (click)=navigateaddnewrecord()> </app-mv-primary-button>\n</div></mat-card>","import {\n  Component,\n  Input,\nOnInit} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EntryPageComponent } from 'src/app/framework-modules/formdata/template/EntryPage/component';\n\n@Component({\n  standalone: true,\n  selector:'app-customer-entry',\n  template: `<app-entry-page [formName]= \"form\"     [routes]=routes></app-entry-page>`,\n  imports:[EntryPageComponent],\n  styleUrls: []\n})\n\nexport class customerEntryComponent implements OnInit{\n  @Input() inputData: any;\n\n  public form;\n    public routes;  \n  constructor(private route:ActivatedRoute) {\n    this.form = \"customerList\";\n    this.routes = [    {\n      \"name\":\"Save Record\",\n      \"routeTo\":\"customerList\"\n    },    {\n      \"name\":\"Navigate Back\",\n      \"routeTo\":\"customerList\"\n    },\n    ]\n  }\n\n  ngOnInit(): void {\n      this.route.params.subscribe(\n        params=>{\n          console.log(params)\n          this.inputData = params\n        }\n      )\n  }}\n","import {\n  Component,\n  Input,\nOnInit} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { tableTemplateComponent } from 'src/app/framework-modules/formdata/template/tableTemplate/component';\n\n@Component({\n  standalone: true,\n  selector:'app-Customer-list',\n  template: `<app-table-template [formName]= \"form\"     [routes]=routes></app-table-template>`,\n  imports:[tableTemplateComponent],\n  styleUrls: []\n})\n\nexport class customerListComponent implements OnInit{\n  @Input() inputData: any;\n\n  public form;\n    public routes;  \n  constructor(private route:ActivatedRoute) {\n    this.form = \"customerList\";\n    this.routes = [    {\n      \"name\":\"add new record\",\n      \"routeTo\":\"customerEntry\"\n    },\n    ]\n  }\n\n  ngOnInit(): void {\n      this.route.params.subscribe(\n        params=>{\n          console.log(params)\n          this.inputData = params\n        }\n      )\n  }}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["MVClientCoreAppModule","MVComponentsModule","FormService","allForms","tableTemplateComponent","constructor","sa","router","ngOnInit","fd","getFormFd","formName","fetchData","formHeader","form","getName","toUpperCase","tableData","gtable","getColumnData","filter","conditions","subscribe","next","data","update","error","msg","console","navigateaddnewrecord","navigate","routes","routeTo","editClicked","$event","primaryKey","Object","keys","extractKeyFields","routeKey","editRoute","i0","selectors","viewQuery","ctx","i3","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}