{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.router.ts","./src/app/framework-modules/formdata/gen/customerForm.ts","./src/app/modules/base.module.ts","./src/app/modules/non-session/component.ts","./src/app/modules/non-session/component.html","./src/app/modules/non-session/interfaces.ts","./src/app/modules/non-session/landing-page/component.ts","./src/app/modules/non-session/landing-page/component.html","./src/app/modules/non-session/landing-page/sample-page/component.ts","./src/app/modules/non-session/landing-page/sample-page/component.html","./src/app/modules/templates/template-1/component.ts","./src/app/modules/templates/template-1/component.html","./src/app/modules/templates/template-2/component.ts","./src/app/modules/templates/template-2/component.html","./src/app/services/constantsService.ts","./src/app/services/messageService.ts","./src/app/services/routerService.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\nimport { RouterService } from './services/routerService';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [RouterService]\n})\nexport class AppComponent implements AfterViewInit {\n  constructor(private routerService: RouterService) {\n  }\n  ngAfterViewInit() {\n    this.routerService.openNonSession();\n  }\n}\n","<router-outlet ></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BaseModule } from './modules/base.module';\nimport { AppRouting } from './app.router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRouting,\n    BaseModule.forRoot(),\n    NgbModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ConstantsService } from './services/constantsService';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: AppComponent\n  },\n  {\n    path: ConstantsService.ROUTE_NON_SESSION, loadChildren: () => import('./modules/non-session/module').then(m => m.NonSessionModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRouting { }\n","\nimport { Form , Field, ChildForm ,FormData, SelectOption, Vo, ServiceAgent } from 'mv-core';\nimport { Validators } from '@angular/forms'\n\nexport class CustomerForm extends Form {\n\tprivate static _instance = new CustomerForm();\n\tcustomerId:Field = {\n\t\tname:'customerId'\n\t\t,controlType: 'Hidden'\n\t\t,label: 'customerId'\n\t\t,valueType: 1\n\t\t,errorId: 'invalidFlexibleId'\n\t\t,minValue: -1\n\t\t,maxValue: 9999999999999\n\t};\n\tname:Field = {\n\t\tname:'name'\n\t\t,controlType: 'Input'\n\t\t,label: 'Customer Name'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidName'\n\t\t,maxLength: 150\n\t};\n\temail:Field = {\n\t\tname:'email'\n\t\t,controlType: 'Input'\n\t\t,label: 'email'\n\t\t,isRequired: true\n\t\t,valueType: 0\n\t\t,errorId: 'invalidEmail'\n\t\t,maxLength: 1000\n\t};\n\taddressLine1:Field = {\n\t\tname:'addressLine1'\n\t\t,controlType: 'Input'\n\t\t,label: 'Address Line 1'\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\tgender:Field = {\n\t\tname:'gender'\n\t\t,controlType: 'Dropdown'\n\t\t,label: 'Gender'\n\t\t,isRequired: true\n\t\t,listName: 'gender'\n\t\t,valueList: [\n\t\t\t{value:'Male',text:'Male'},\n\t\t\t{value:'Female',text:'Female'},\n\t\t\t{value:'Others',text:'Others'},\n\t\t\t{value:'Not Applicable',text:'Not Applicable'}\n\t\t\t]\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\tprefferedName:Field = {\n\t\tname:'prefferedName'\n\t\t,controlType: 'Input'\n\t\t,label: 'Prefered Name '\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\tphone:Field = {\n\t\tname:'phone'\n\t\t,controlType: 'Input'\n\t\t,label: 'Phone Name '\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\tuniversity:Field = {\n\t\tname:'university'\n\t\t,controlType: 'Input'\n\t\t,label: 'University Name '\n\t\t,valueType: 0\n\t\t,errorId: 'invalidText'\n\t\t,maxLength: 1000\n\t};\n\n\tpublic static getInstance(): CustomerForm {\n\t\treturn CustomerForm._instance;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.serveGuests = true;\n\t\tthis.fields = new Map();\n\t\tthis.controls = new Map();\n\t\tthis.controls.set('customerId', [Validators.min(-1), Validators.max(9999999999999)]);\n\t\tthis.fields.set('customerId', this.customerId);\n\t\tthis.controls.set('name', [Validators.required, Validators.maxLength(150)]);\n\t\tthis.fields.set('name', this.name);\n\t\tthis.controls.set('email', [Validators.required, Validators.email, Validators.maxLength(1000)]);\n\t\tthis.fields.set('email', this.email);\n\t\tthis.controls.set('addressLine1', [Validators.maxLength(1000)]);\n\t\tthis.fields.set('addressLine1', this.addressLine1);\n\t\tthis.controls.set('gender', [Validators.required, Validators.maxLength(1000)]);\n\t\tthis.fields.set('gender', this.gender);\n\t\tthis.controls.set('prefferedName', [Validators.maxLength(1000)]);\n\t\tthis.fields.set('prefferedName', this.prefferedName);\n\t\tthis.controls.set('phone', [Validators.maxLength(1000)]);\n\t\tthis.fields.set('phone', this.phone);\n\t\tthis.controls.set('university', [Validators.maxLength(1000)]);\n\t\tthis.fields.set('university', this.university);\n\t\tthis.opsAllowed = {create: true, filter: true, get: true};\n\t\tthis.listFields = ['gender'];\n\t\tthis.keyFields = [\"customerId\"];\n\t}\n\n\tpublic getName(): string {\n\t\t return 'customer';\n\t}\n}\n\n\nexport class CustomerFd extends FormData {\n\tconstructor(form: CustomerForm, sa: ServiceAgent) {\n\t\tsuper(form, sa);\n\t}\n\n\tsetFieldValue(name: 'customerId' | 'name' | 'email' | 'addressLine1' | 'gender' | 'prefferedName' | 'phone' | 'university', value: string | number | boolean | null ): void {\n\t\tsuper.setFieldValue(name, value);\n\t}\n\n\tgetFieldValue(name: 'customerId' | 'name' | 'email' | 'addressLine1' | 'gender' | 'prefferedName' | 'phone' | 'university' ): string | number | boolean | null {\n\t\treturn super.getFieldValue(name);\n\t}\n}\n\n\nexport interface CustomerVo extends Vo {\n\tgender?: string, \n\tphone?: string, \n\tprefferedName?: string, \n\tuniversity?: string, \n\tcustomerId?: number, \n\tname?: string, \n\taddressLine1?: string, \n\temail?: string\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { RouterService } from '../services/routerService';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MessageService } from '../services/messageService';\nimport { NonSessionComponent } from './non-session/component';\nimport { LandingComponent } from './non-session/landing-page/component';\n\n@NgModule({\n    declarations: [\n        /**\n         * All components to be declared here\n         */\n        /**\n        * Landing Componenet\n        */\n        NonSessionComponent,\n        LandingComponent,\n        /**\n         * Non Session Group Panels\n         */\n        /**\n         * Session Group Panels\n         */\n    ],\n    imports: [\n        RouterModule,\n        HttpClientModule,\n    ],\n    providers: [],\n    bootstrap: [],\n    exports: [\n        /**\n         * App Components\n         */\n        RouterModule,\n        HttpClientModule,\n        /**\n         * All components to be declared here\n         */\n        /**\n        * Landing Componenet\n        */\n        NonSessionComponent,\n        LandingComponent,\n        /**\n         * Non Session Group Panels\n         */\n        /**\n         * Session Group Panels\n         */\n    ],\n    schemas: []\n})\nexport class BaseModule {\n  static forRoot(): ModuleWithProviders<BaseModule> {\n    return {\n      ngModule: BaseModule,\n      providers: [\n        RouterService,\n        MessageService\n      ]\n    };\n  }\n\n}\n","import { Component, OnInit, ViewChild, ViewContainerRef, Type, ComponentFactoryResolver } from '@angular/core';\nimport { LandingPanel, GroupPanel } from './interfaces';\nimport { LandingComponent } from './landing-page/component';\n \n/**\n * temp during development. will come from menuService\n */\nconst ROUTES: { [key: string]: Type<GroupPanel> } = {\n    Landing: LandingComponent,\n};\n\n\n@Component({\n  selector: 'app-non-session',\n  templateUrl: './component.html',\n  styleUrls: ['./component.scss'],\n})\n\nexport class NonSessionComponent implements LandingPanel,OnInit {\n\n  menu: { [key: string]: Type<GroupPanel> };\n\n  selected:boolean = false;\n  c:ComponentFactoryResolver;\n\n\n  @ViewChild(\"primaryContainer\", {static:true,read: ViewContainerRef }) container: ViewContainerRef;\n  sideNav: Array<any> = [];\n  sideNavLength: number = 0;\n  selectedSideNavItem: string;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver ) { }\n \n  ngOnInit() {\n    /**\n     * after we write menuService, we will use it this way.\n     * this.menus = this.menuService.getMainMenu();\n     */\n    this.menu = ROUTES;\n    this.navigate('Landing');\n  }\n\n  /**\n   * \n   * @param panelName landing panel to be opened in the container\n   * @param data any optional data t be passed to the landing panel\n   */\n  public navigate(panelName: string,data?: any): void {\n    \n    this.container.clear();\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.menu[panelName]);\n    const c = this.container.createComponent(factory);\n    c.instance.parentPanel = this;\n    c.instance.inputData = data;\n    c.changeDetectorRef.detectChanges();\n  }\n  \n  navigation(moduleId)\n  { \n    this.selected=true;\n    this.navigate(moduleId);\n    }\n}\n","<ng-container #primaryContainer></ng-container>","import { Type, EventEmitter, ComponentFactoryResolver } from \"@angular/core\";\nimport { NonSessionComponent } from './component';\n\nexport interface LandingPanel{\n    navigate(panel:string, data?:any):void;\n}\nexport interface GroupPanel{\n    inputData:any;\n    parentPanel:NonSessionComponent;\n    navigate(panel:string, data?:any):void;\n}\n\nexport interface DynamicPanel{\n    inputData:any;\n    parentPanel: GroupPanel\n}\n\n","import { Component,OnInit,Input,ViewChild,ViewContainerRef,Type,ComponentFactoryResolver} from \"@angular/core\";\nimport { DynamicPanel,GroupPanel } from '../interfaces'\nimport { NonSessionComponent } from '../component';\nimport { ExampleComponent } from './sample-page/component';\n\n\n/**\n Const to map the screen-component to screen-name to rended the facotry \n */\nconst MENU: { [key: string]:{comp:Type<DynamicPanel>,subTitle?:string}} = {\n    Login: {comp:ExampleComponent },\n\n};\n\n\n@Component({\n  selector: \"app-landing-page\",\n  templateUrl: \"./component.html\",\n  styleUrls: [\"./component.scss\"]\n})\nexport class LandingComponent implements OnInit, GroupPanel {\n  @Input() inputData: any;\n  @Input() parentPanel: NonSessionComponent;\n  menu: { [key: string]: Type<DynamicPanel> };\n  sidenav:boolean = false;\n  displayNames:{}\n  cardHeader:any;\n  /**\n    container for the child page loaded from the seconday navbar \n   */\n\n  @ViewChild(\"secondaryContainer\", {static:true,read: ViewContainerRef }) container: ViewContainerRef;\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n  \n  ngOnInit() {\n    this.cardHeader=\"Students\";\n    /**\n     Navigate to Student List page on app load\n     */\n    this.navigate(\"Login\", {});\n  }\n\n  /**\n   *\n   * @param compName is the name of the component to navigate to\n   * @param data is for any related data needed\n   */\n\n  public navigate(compName: string, data: any): void {\n    this.container.clear();\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      MENU[compName].comp\n    );\n    const c = this.container.createComponent(factory);\n    c.instance.inputData = data;\n    c.instance.parentPanel = this;\n    c.changeDetectorRef.detectChanges();\n  }\n}\n","<ng-container #secondaryContainer></ng-container>","import {\n  Component,\n  Input,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  FilterRequest,\n  MVClientCoreAppModule,\n  MVComponentsModule,\n  MvTableComponent,\n  ServiceAgent,\n  TableMetaData\n} from 'mv-core';\nimport {\n  CustomerFd,\n  CustomerForm\n} from 'src/app/framework-modules/formdata/gen/customerForm';\nimport {\n  NonSessionComponent\n} from '../../component';\nimport {\n  DynamicPanel,\n  GroupPanel\n} from '../../interfaces';\nimport { data } from 'jquery';\nimport { TemplateOneComponent } from 'src/app/modules/templates/template-1/component';\nimport { TemplateTwoComponent } from 'src/app/modules/templates/template-2/component';\n\n@Component({\n  standalone: true,\n  selector: 'app-login',\n  templateUrl: './component.html',\n  imports:[TemplateOneComponent,MVClientCoreAppModule,MVComponentsModule,TemplateTwoComponent],\n  styleUrls: []\n})\n\nexport class ExampleComponent implements DynamicPanel,OnInit {\n  @ViewChild(\"gridTable\", { static: false }) gtable: MvTableComponent;\n  @Input() inputData: any;\n  @Input() parentPanel: GroupPanel;\n  @Input() session: NonSessionComponent;\n\n  public form: CustomerForm;\n  public fd: CustomerFd;\n  public tableData: TableMetaData;\n  public constructor(sa: ServiceAgent) {\n    this.form = new CustomerForm();\n    this.fd = new CustomerFd(this.form, sa);\n  }\n\n  ngOnInit() {\n    this.metaDataInit();\n  }\n\n  metaDataInit() {\n    this.tableData = {\n      data: [],\n      metaData: {\n        column_names: [\n          \"name\",\n          \"addressLine1\",\n          \"phone\"\n        ],\n        display_names: {\n          \"name\": \"Customer Name\",\n          \"addressLine1\": \"Address Line 1\",\n          \"phone\":\"Phone Number\"\n        },\n\n      },\n    };\n  }\n\n\n  fetchData() {\n\n\n    const filter: FilterRequest = {\n      conditions: {},\n      sort: {},\n      maxRows: 10\n    };\n    \n   this.fd.filter(filter).subscribe({\n    next: data =>{\n      console.log(data)\n        this.tableData.data = data;\n        this.gtable.update();\n    },\n    error: msg => console.error(\"Error from server \", msg)\n   });\n  }\n}","<app-template-one [fd]=\"fd\"></app-template-one>\n<app-template-two [fd]=\"fd\"></app-template-two>","import {\n    Component, Input,\n  } from '@angular/core';\nimport { FormData, MVClientCoreAppModule, MVComponentsModule } from 'mv-core';\n  \n  @Component({\n    standalone: true,\n    selector: 'app-template-one',\n    templateUrl: './component.html',\n    imports:[MVClientCoreAppModule,MVComponentsModule],\n    exportAs:\"TemplateOneComponent\",\n    styleUrls: []\n  })\n  \n  export class TemplateOneComponent {\n    @Input() fd: FormData;\n    constructor(){\n    }\n\n    saveForm(){\n      this.fd.saveAsNew().subscribe(\n        data=>{\n          console.log(\"saved\")\n        },\n        err=>{\n          console.log(err)\n        }\n      )\n    }\n    }","<mat-card class =\"col-md-8\" style=\"margin: auto\">\n    <h2> Customer Form</h2>\n</mat-card>\n<div class =\"col-md-8\" style=\"margin: auto; padding-top:3rem\">\n    <app-mv-form-generator [formData]=\"fd\"></app-mv-form-generator>\n</div>\n<div style=\"text-align: center;padding-top: 2rem;\">\n    <app-mv-primary-button name=\"Save\" (click)=\"saveForm()\"></app-mv-primary-button>\n</div>","import {\n    Component, Input, OnInit, ViewChild,\n  } from '@angular/core';\nimport { FilterRequest, FormData, MvTableComponent, ServiceAgent, TableMetaData } from 'mv-core';\nimport { MVClientCoreAppModule, MVComponentsModule } from 'mv-core';\n  \n  @Component({\n    standalone: true,\n    selector: 'app-template-two',\n    templateUrl: './component.html',\n    imports:[MVClientCoreAppModule,MVComponentsModule],\n    styleUrls: []\n  })\n  \n  export class TemplateTwoComponent{\n    @ViewChild(\"gridTable\", { static: false }) gtable: MvTableComponent;\n    @Input() fd: FormData;\n  \n    public tableData: TableMetaData;\n    public constructor(sa: ServiceAgent) {\n    }\n\n    \n    fetchData() {\n  \n  \n      const filter: FilterRequest = {\n        conditions: {},\n        sort: {},\n        maxRows: 10\n      };\n      \n     this.fd.filter(filter).subscribe({\n      next: data =>{\n        console.log(this.fd)\n        console.log(data)\n          this.tableData.data = data;\n          this.gtable.update();\n      },\n      error: msg => console.error(\"Error from server \", msg)\n     });\n    }\n    }","<app-mv-primary-button name=\"Get Data\" (click)=\"fetchData()\"></app-mv-primary-button>\n\n<app-mv-table style=\"width:1000px;\" data [tableGridData]=\"tableData\" #gridTable>\n</app-mv-table>","import { Injectable } from \"@angular/core\";\n\n@Injectable()\n\nexport class ConstantsService {\n  public static ROUTE_NON_SESSION = \"non-session\";\n  public static ROUTE_SESSION = \"session\";\n}\n","import {Injectable} from \"@angular/core\";\nimport { MatSnackBar, MatSnackBarConfig } from \"@angular/material/snack-bar\"; \n@Injectable()\nexport class MessageService {\n   constructor(private snackBar: MatSnackBar) {}\n\n   showSuccess(message: string) {\n    const config = new MatSnackBarConfig();\n    config.panelClass = ['snackbar-success'];\n    config.duration = 3000;\n    this.snackBar.open(message, null, config);\n }\n   showError(message: string) {\n      const config = new MatSnackBarConfig();\n      config.panelClass = ['snackbar-error'];\n      config.duration = 3000;\n      this.snackBar.open(message, null, config);\n   }\n\n   showInfo(message: string) {\n      const config = new MatSnackBarConfig();\n      config.panelClass = ['snackbar-info'];\n      config.duration = 3000;\n      this.snackBar.open(message, null, config);\n   }\n   showDetail(message: string) {\n      const config = new MatSnackBarConfig();\n      config.horizontalPosition = 'end';\n      config.verticalPosition = 'bottom';\n      this.snackBar.open(message,null,config)\n   }\n   close(){\n      this.snackBar.dismiss();\n   }\n}","import {\n  Injectable\n} from \"@angular/core\";\nimport {\n  Router,\n} from '@angular/router'\nimport {\n  BehaviorSubject\n} from 'rxjs';\nimport {\n  ConstantsService\n} from './constantsService';\n\nimport {\n  Location\n} from '@angular/common';\n\n@Injectable()\n\nexport class RouterService {\n  private currentRoute = new BehaviorSubject < string > (\"\");\n  constructor(private router: Router, private location: Location) {\n    this.router.navigate\n  }\n\n  /* ----------------------------------General Routes-------------------------------*/\n\n  openNonSession = function () {\n    this.doNavigation(ConstantsService.ROUTE_NON_SESSION);\n  }\n\n  private doNavigation = function (route) {\n    this.currentRoute.next(route)\n    this.router.navigate([route]);\n  }\n\n  private doNavigateReplacement = function (route) {\n    this.currentRoute.next(route)\n    this.router.navigate([route], {\n      \n      replaceUrl: true\n    });\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}